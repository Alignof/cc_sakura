.intel_syntax noprefix
.data
FUNC_NUM:
	.long	300
SEEK_END:
	.long	2
SEEK_SET:
	.long	0
false:
	.long	0
true:
	.long	1
func_list:
	.zero 2400
filename:
	.zero 104
.LC0:
	.string "unknown type"
.text
.globl type_size
type_size:
	push rbp
	mov rbp,rsp
	sub rsp,8
	push rdi
	mov rax,rbp
	sub rax,8
	push rax
	pop rax
	pop rdi
	mov [rax],rdi
	push rdi
	pop rax
	mov rax,rbp
	sub rax,8
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 0
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	push 0
	pop rdi
	pop rax
	cmp eax,edi
	sete al
	movzb rax,al
	push rax
	pop rax
	cmp rax,0
	jne .LcaseBegin000
	mov rax,rbp
	sub rax,8
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 0
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	push 1
	pop rdi
	pop rax
	cmp eax,edi
	sete al
	movzb rax,al
	push rax
	pop rax
	cmp rax,0
	jne .LcaseBegin001
	mov rax,rbp
	sub rax,8
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 0
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	push 2
	pop rdi
	pop rax
	cmp eax,edi
	sete al
	movzb rax,al
	push rax
	pop rax
	cmp rax,0
	jne .LcaseBegin002
	mov rax,rbp
	sub rax,8
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 0
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	push 3
	pop rdi
	pop rax
	cmp eax,edi
	sete al
	movzb rax,al
	push rax
	pop rax
	cmp rax,0
	jne .LcaseBegin003
	mov rax,rbp
	sub rax,8
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 0
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	push 4
	pop rdi
	pop rax
	cmp eax,edi
	sete al
	movzb rax,al
	push rax
	pop rax
	cmp rax,0
	jne .LcaseBegin004
	mov rax,rbp
	sub rax,8
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 0
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	push 5
	pop rdi
	pop rax
	cmp eax,edi
	sete al
	movzb rax,al
	push rax
	pop rax
	cmp rax,0
	jne .LcaseBegin005
	mov rax,rbp
	sub rax,8
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 0
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	push 6
	pop rdi
	pop rax
	cmp eax,edi
	sete al
	movzb rax,al
	push rax
	pop rax
	cmp rax,0
	jne .LcaseBegin006
	mov rax,rbp
	sub rax,8
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 0
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	push 7
	pop rdi
	pop rax
	cmp eax,edi
	sete al
	movzb rax,al
	push rax
	pop rax
	cmp rax,0
	jne .LcaseBegin007
	jmp .LcaseBegin008
.LcaseBegin000:
	push 1
	pop rax
	mov rsp,rbp
	pop rbp
	ret
.LcaseBegin001:
	push 1
	pop rax
	mov rsp,rbp
	pop rbp
	ret
.LcaseBegin002:
	push 1
	pop rax
	mov rsp,rbp
	pop rbp
	ret
.LcaseBegin003:
	push 4
	pop rax
	mov rsp,rbp
	pop rbp
	ret
.LcaseBegin004:
	push 8
	pop rax
	mov rsp,rbp
	pop rbp
	ret
.LcaseBegin005:
	mov rax,rbp
	sub rax,8
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 24
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	mov rax,rbp
	sub rax,8
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 8
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	pop rax
	mov rdi,rax
	mov rax,1
	push rbp
	mov rbp,rsp
	and rsp,-16
	call type_size
	mov rsp,rbp
	pop rbp
	push rax
	pop rdi
	pop rax
	imul eax,edi
	push rax
	pop rax
	mov rsp,rbp
	pop rbp
	ret
.LcaseBegin006:
	mov rax,rbp
	sub rax,8
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 16
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	pop rax
	mov rsp,rbp
	pop rbp
	ret
.LcaseBegin007:
	push 4
	pop rax
	mov rsp,rbp
	pop rbp
	ret
.LcaseBegin008:
	lea rax,token[rip]
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 24
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	lea rax, .LC0[rip]
	push rax
	pop rax
	mov rsi,rax
	pop rax
	mov rdi,rax
	mov rax,2
	push rbp
	mov rbp,rsp
	and rsp,-16
	call error_at
	mov rsp,rbp
	pop rbp
	push rax
	pop rax
	push rax
.LloopEnd000:
	push 0
	push 1
	pop rdi
	pop rax
	sub eax,edi
	push rax
	pop rax
	mov rsp,rbp
	pop rbp
	ret
	mov rsp,rbp
	pop rbp
	ret

.globl type_align
type_align:
	push rbp
	mov rbp,rsp
	sub rsp,40
	push rdi
	mov rax,rbp
	sub rax,8
	push rax
	pop rax
	pop rdi
	mov [rax],rdi
	push rdi
	pop rax
	mov rax,rbp
	sub rax,16
	push rax
	push 0
	pop rdi
	pop rax
	mov [rax],edi
	push rdi
	pop rax
	mov rax,rbp
	sub rax,24
	push rax
	push 0
	pop rdi
	pop rax
	mov [rax],edi
	push rdi
	pop rax
	mov rax,rbp
	sub rax,32
	push rax
	pop rax
	mov rax,[rax]
	push rax
	pop rax
	mov rax,rbp
	sub rax,40
	push rax
	pop rax
	mov rax,[rax]
	push rax
	pop rax
	mov rax,rbp
	sub rax,8
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 0
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	push 0
	pop rdi
	pop rax
	cmp eax,edi
	sete al
	movzb rax,al
	push rax
	pop rax
	cmp rax,0
	jne .LcaseBegin009
	mov rax,rbp
	sub rax,8
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 0
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	push 1
	pop rdi
	pop rax
	cmp eax,edi
	sete al
	movzb rax,al
	push rax
	pop rax
	cmp rax,0
	jne .LcaseBegin010
	mov rax,rbp
	sub rax,8
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 0
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	push 2
	pop rdi
	pop rax
	cmp eax,edi
	sete al
	movzb rax,al
	push rax
	pop rax
	cmp rax,0
	jne .LcaseBegin011
	mov rax,rbp
	sub rax,8
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 0
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	push 3
	pop rdi
	pop rax
	cmp eax,edi
	sete al
	movzb rax,al
	push rax
	pop rax
	cmp rax,0
	jne .LcaseBegin012
	mov rax,rbp
	sub rax,8
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 0
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	push 4
	pop rdi
	pop rax
	cmp eax,edi
	sete al
	movzb rax,al
	push rax
	pop rax
	cmp rax,0
	jne .LcaseBegin013
	mov rax,rbp
	sub rax,8
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 0
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	push 5
	pop rdi
	pop rax
	cmp eax,edi
	sete al
	movzb rax,al
	push rax
	pop rax
	cmp rax,0
	jne .LcaseBegin014
	mov rax,rbp
	sub rax,8
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 0
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	push 6
	pop rdi
	pop rax
	cmp eax,edi
	sete al
	movzb rax,al
	push rax
	pop rax
	cmp rax,0
	jne .LcaseBegin015
	mov rax,rbp
	sub rax,8
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 0
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	push 7
	pop rdi
	pop rax
	cmp eax,edi
	sete al
	movzb rax,al
	push rax
	pop rax
	cmp rax,0
	jne .LcaseBegin016
	jmp .LcaseBegin017
.LcaseBegin009:
	push 1
	pop rax
	mov rsp,rbp
	pop rbp
	ret
.LcaseBegin010:
	push 1
	pop rax
	mov rsp,rbp
	pop rbp
	ret
.LcaseBegin011:
	push 1
	pop rax
	mov rsp,rbp
	pop rbp
	ret
.LcaseBegin012:
	push 4
	pop rax
	mov rsp,rbp
	pop rbp
	ret
.LcaseBegin013:
	push 8
	pop rax
	mov rsp,rbp
	pop rbp
	ret
.LcaseBegin014:
	mov rax,rbp
	sub rax,8
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 8
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	pop rax
	mov rdi,rax
	mov rax,1
	push rbp
	mov rbp,rsp
	and rsp,-16
	call type_align
	mov rsp,rbp
	pop rbp
	push rax
	pop rax
	mov rsp,rbp
	pop rbp
	ret
.LcaseBegin015:
	mov rax,rbp
	sub rax,40
	push rax
	mov rax,rbp
	sub rax,8
	push rax
	pop rax
	mov rax,[rax]
	push rax
	mov rax,rbp
	sub rax,16
	push rax
	pop rax
	mov rax,[rax]
	push rax
	pop rax
	mov rsi,rax
	pop rax
	mov rdi,rax
	mov rax,2
	push rbp
	mov rbp,rsp
	and rsp,-16
	call find_struct_member
	mov rsp,rbp
	pop rbp
	push rax
	pop rdi
	pop rax
	mov [rax],rdi
	push rdi
	pop rax
.LloopBegin002:
	mov rax,rbp
	sub rax,40
	push rax
	pop rax
	mov rax,[rax]
	push rax
	pop rax
	cmp rax,0
	je .LloopEnd002
	mov rax,rbp
	sub rax,32
	push rax
	mov rax,rbp
	sub rax,40
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 24
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	pop rax
	mov rdi,rax
	mov rax,1
	push rbp
	mov rbp,rsp
	and rsp,-16
	call type_align
	mov rsp,rbp
	pop rbp
	push rax
	pop rdi
	pop rax
	mov [rax],edi
	push rdi
	pop rax
	mov rax,rbp
	sub rax,24
	push rax
	pop rax
	mov rax,[rax]
	push rax
	mov rax,rbp
	sub rax,32
	push rax
	pop rax
	mov rax,[rax]
	push rax
	pop rdi
	pop rax
	cmp eax,edi
	setl al
	movzb rax,al
	push rax
	pop rax
	cmp rax,0
	je .LifEnd003
	mov rax,rbp
	sub rax,24
	push rax
	mov rax,rbp
	sub rax,32
	push rax
	pop rax
	mov rax,[rax]
	push rax
	pop rdi
	pop rax
	mov [rax],edi
	push rdi
	pop rax
	push rax
.LifEnd003:
	mov rax,rbp
	sub rax,40
	push rax
	mov rax,rbp
	sub rax,40
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 32
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	pop rdi
	pop rax
	mov [rax],rdi
	push rdi
	pop rax
	push rax
.LloopCont002:
	jmp .LloopBegin002
.LloopEnd002:
	mov rax,rbp
	sub rax,24
	push rax
	pop rax
	mov rax,[rax]
	push rax
	pop rax
	mov rsp,rbp
	pop rbp
	ret
.LcaseBegin016:
	push 4
	pop rax
	mov rsp,rbp
	pop rbp
	ret
.LcaseBegin017:
	lea rax,token[rip]
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 24
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	lea rax, .LC0[rip]
	push rax
	pop rax
	mov rsi,rax
	pop rax
	mov rdi,rax
	mov rax,2
	push rbp
	mov rbp,rsp
	and rsp,-16
	call error_at
	mov rsp,rbp
	pop rbp
	push rax
	pop rax
	push rax
.LloopEnd001:
	push 0
	push 1
	pop rdi
	pop rax
	sub eax,edi
	push rax
	pop rax
	mov rsp,rbp
	pop rbp
	ret
	mov rsp,rbp
	pop rbp
	ret

.globl align_array_size
align_array_size:
	push rbp
	mov rbp,rsp
	sub rsp,24
	push rdi
	mov rax,rbp
	sub rax,8
	push rax
	pop rax
	pop rdi
	mov [rax],rdi
	push rdi
	pop rax
	push rsi
	mov rax,rbp
	sub rax,16
	push rax
	pop rax
	pop rdi
	mov [rax],rdi
	push rdi
	pop rax
	mov rax,rbp
	sub rax,24
	push rax
	mov rax,rbp
	sub rax,16
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 16
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	pop rdi
	pop rax
	mov [rax],edi
	push rdi
	pop rax
	mov rax,rbp
	sub rax,24
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 8
	pop rdi
	pop rax
	cqo
	idiv eax,edi
	mov eax,edx
	push rax
	pop rax
	cmp rax,0
	je .Lelse004
	mov rax,rbp
	sub rax,24
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 8
	pop rdi
	pop rax
	cqo
	idiv eax,edi
	push rax
	push 8
	pop rdi
	pop rax
	imul eax,edi
	push rax
	push 8
	pop rdi
	pop rax
	add eax,edi
	push rax
	pop rax
	jmp .LifEnd004
.Lelse004:
	mov rax,rbp
	sub rax,24
	push rax
	pop rax
	mov rax,[rax]
	push rax
	pop rax
.LifEnd004:
	push rax
	pop rax
	mov rsp,rbp
	pop rbp
	ret
	mov rsp,rbp
	pop rbp
	ret

.globl get_pointer_type
get_pointer_type:
	push rbp
	mov rbp,rsp
	sub rsp,8
	push rdi
	mov rax,rbp
	sub rax,8
	push rax
	pop rax
	pop rdi
	mov [rax],rdi
	push rdi
	pop rax
.LloopBegin005:
	mov rax,rbp
	sub rax,8
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 8
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	push 0
	pop rdi
	pop rax
	cmp rax,rdi
	setne al
	movzb rax,al
	push rax
	pop rax
	cmp rax,0
	je .LloopEnd005
	mov rax,rbp
	sub rax,8
	push rax
	mov rax,rbp
	sub rax,8
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 8
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	pop rdi
	pop rax
	mov [rax],rdi
	push rdi
	pop rax
.LloopCont005:
	jmp .LloopBegin005
.LloopEnd005:
	mov rax,rbp
	sub rax,8
	push rax
	pop rax
	mov rax,[rax]
	push rax
	pop rax
	mov rsp,rbp
	pop rbp
	ret
	mov rsp,rbp
	pop rbp
	ret

.globl pointer_calc
pointer_calc:
	push rbp
	mov rbp,rsp
	sub rsp,40
	push rdi
	mov rax,rbp
	sub rax,8
	push rax
	pop rax
	pop rdi
	mov [rax],rdi
	push rdi
	pop rax
	push rsi
	mov rax,rbp
	sub rax,16
	push rax
	pop rax
	pop rdi
	mov [rax],rdi
	push rdi
	pop rax
	push rdx
	mov rax,rbp
	sub rax,24
	push rax
	pop rax
	pop rdi
	mov [rax],rdi
	push rdi
	pop rax
	mov rax,rbp
	sub rax,32
	push rax
	pop rax
	mov rax,[rax]
	push rax
	pop rax
	mov rax,rbp
	sub rax,8
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 40
	pop rdi
	pop rax
	add rax,rdi
	push rax
	mov rax,rbp
	sub rax,16
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 0
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	mov rax,rbp
	sub rax,24
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 0
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	pop rdi
	pop rax
	cmp edi,eax
	setl al
	movzb rax,al
	push rax
	pop rax
	cmp rax,0
	je .Lelse006
	mov rax,rbp
	sub rax,16
	push rax
	pop rax
	mov rax,[rax]
	push rax
	pop rax
	jmp .LifEnd006
.Lelse006:
	mov rax,rbp
	sub rax,24
	push rax
	pop rax
	mov rax,[rax]
	push rax
	pop rax
.LifEnd006:
	push rax
	pop rdi
	pop rax
	mov [rax],rdi
	push rdi
	pop rax
	mov rax,rbp
	sub rax,40
	push rax
	push 1
	push 72
	pop rax
	mov rsi,rax
	pop rax
	mov rdi,rax
	mov rax,2
	push rbp
	mov rbp,rsp
	and rsp,-16
	call calloc
	mov rsp,rbp
	pop rbp
	push rax
	pop rdi
	pop rax
	mov [rax],rdi
	push rdi
	pop rax
	mov rax,rbp
	sub rax,40
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 0
	pop rdi
	pop rax
	add rax,rdi
	push rax
	push 27
	pop rdi
	pop rax
	mov [rax],rdi
	push rdi
	pop rax
	mov rax,rbp
	sub rax,40
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 40
	pop rdi
	pop rax
	add rax,rdi
	push rax
	push 1
	push 48
	pop rax
	mov rsi,rax
	pop rax
	mov rdi,rax
	mov rax,2
	push rbp
	mov rbp,rsp
	and rsp,-16
	call calloc
	mov rsp,rbp
	pop rbp
	push rax
	pop rdi
	pop rax
	mov [rax],rdi
	push rdi
	pop rax
	mov rax,rbp
	sub rax,40
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 40
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	push 0
	pop rdi
	pop rax
	add rax,rdi
	push rax
	push 3
	pop rdi
	pop rax
	mov [rax],rdi
	push rdi
	pop rax
	mov rax,rbp
	sub rax,40
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 40
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	push 16
	pop rdi
	pop rax
	add rax,rdi
	push rax
	mov rax,rbp
	sub rax,40
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 40
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	pop rax
	mov rdi,rax
	mov rax,1
	push rbp
	mov rbp,rsp
	and rsp,-16
	call type_size
	mov rsp,rbp
	pop rbp
	push rax
	pop rdi
	pop rax
	mov [rax],edi
	push rdi
	pop rax
	mov rax,rbp
	sub rax,40
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 40
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	push 20
	pop rdi
	pop rax
	add rax,rdi
	push rax
	mov rax,rbp
	sub rax,40
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 40
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	pop rax
	mov rdi,rax
	mov rax,1
	push rbp
	mov rbp,rsp
	and rsp,-16
	call type_align
	mov rsp,rbp
	pop rbp
	push rax
	pop rdi
	pop rax
	mov [rax],edi
	push rdi
	pop rax
	mov rax,rbp
	sub rax,16
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 0
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	push 4
	pop rdi
	pop rax
	cmp edi,eax
	setle al
	movzb rax,al
	push rax
	mov rax,rbp
	sub rax,16
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 8
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	push 0
	pop rdi
	pop rax
	cmp rax,rdi
	setne al
	movzb rax,al
	push rax
	pop rdi
	pop rax
	and eax,edi
	movzb rax,al
	push rax
	pop rax
	cmp rax,0
	je .Lelse007
	mov rax,rbp
	sub rax,32
	push rax
	mov rax,rbp
	sub rax,16
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 8
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	pop rdi
	pop rax
	mov [rax],rdi
	push rdi
	pop rax
	mov rax,rbp
	sub rax,40
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 48
	pop rdi
	pop rax
	add rax,rdi
	push rax
	mov rax,rbp
	sub rax,32
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 16
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	pop rdi
	pop rax
	mov [rax],edi
	push rdi
	pop rax
	mov rax,rbp
	sub rax,8
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 16
	pop rdi
	pop rax
	add rax,rdi
	push rax
	push 2
	mov rax,rbp
	sub rax,8
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 16
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	mov rax,rbp
	sub rax,40
	push rax
	pop rax
	mov rax,[rax]
	push rax
	pop rax
	mov rdx,rax
	pop rax
	mov rsi,rax
	pop rax
	mov rdi,rax
	mov rax,3
	push rbp
	mov rbp,rsp
	and rsp,-16
	call new_node
	mov rsp,rbp
	pop rbp
	push rax
	pop rdi
	pop rax
	mov [rax],rdi
	push rdi
	pop rax
	push rax
	jmp .LifEnd007
.Lelse007:
	mov rax,rbp
	sub rax,24
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 0
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	push 4
	pop rdi
	pop rax
	cmp edi,eax
	setle al
	movzb rax,al
	push rax
	mov rax,rbp
	sub rax,24
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 8
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	push 0
	pop rdi
	pop rax
	cmp rax,rdi
	setne al
	movzb rax,al
	push rax
	pop rdi
	pop rax
	and eax,edi
	movzb rax,al
	push rax
	pop rax
	cmp rax,0
	je .LifEnd008
	mov rax,rbp
	sub rax,32
	push rax
	mov rax,rbp
	sub rax,24
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 8
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	pop rdi
	pop rax
	mov [rax],rdi
	push rdi
	pop rax
	mov rax,rbp
	sub rax,40
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 48
	pop rdi
	pop rax
	add rax,rdi
	push rax
	mov rax,rbp
	sub rax,32
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 16
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	pop rdi
	pop rax
	mov [rax],edi
	push rdi
	pop rax
	mov rax,rbp
	sub rax,8
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 8
	pop rdi
	pop rax
	add rax,rdi
	push rax
	push 2
	mov rax,rbp
	sub rax,8
	push rax
	pop rax
	mov rax,[rax]
	push rax
	push 8
	pop rdi
	pop rax
	add rax,rdi
	push rax
	pop rax
	push [rax]
	mov rax,rbp
	sub rax,40
	push rax
	pop rax
	mov rax,[rax]
	push rax
	pop rax
	mov rdx,rax
	pop rax
	mov rsi,rax
	pop rax
	mov rdi,rax
	mov rax,3
	push rbp
	mov rbp,rsp
	and rsp,-16
	call new_node
	mov rsp,rbp
	pop rbp
	push rax
	pop rdi
	pop rax
	mov [rax],rdi
	push rdi
	pop rax
	push rax
.LifEnd008:
.LifEnd007:
	mov rax,rbp
	sub rax,8
	push rax
	pop rax
	mov rax,[rax]
	push rax
	pop rax
	mov rsp,rbp
	pop rbp
	ret
	mov rsp,rbp
	pop rbp
	ret

